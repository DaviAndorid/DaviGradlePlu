apply plugin: 'com.android.application'

android {
    compileSdkVersion 30
    buildToolsVersion "30.0.0"


    defaultConfig {
        applicationId "com.sq.mobile.hook_fix_plu_one"
        minSdkVersion 15
        targetSdkVersion 30
        versionCode 1
        versionName "1.0"

        testInstrumentationRunner "androidx.test.runner.AndroidJUnitRunner"
    }

    buildTypes {
        release {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android-optimize.txt'), 'proguard-rules.pro'
        }
    }

}

dependencies {
    implementation fileTree(dir: 'libs', include: ['*.jar'])

    //implementation project(":hook_fix_lib_one")
    provided files("libs/mypluginlibrary1-2.jar")

    implementation 'androidx.appcompat:appcompat:1.0.2'
    implementation 'androidx.constraintlayout:constraintlayout:1.1.3'
    testImplementation 'junit:junit:4.12'
    androidTestImplementation 'androidx.test:runner:1.1.1'
    androidTestImplementation 'androidx.test.espresso:espresso-core:3.1.1'
}

/***
 * 【对插件进行代码调试】
 * 打包后把apk的名字改为plugin1.apk，并复制到宿主HostApp的assets目录下：
 * */
def pluName = 'plugin1-4.apk'
assemble.doLast {
    android.applicationVariants.all { variant ->
        // Copy Release artifact to HostApp's assets and rename
        if (variant.name == "release") {
            variant.outputs.each { output ->
                File originFile = output.outputFile
                println "daviAndroid" + originFile.absolutePath

                copy {
                    from originFile
                    into "$rootDir/hook_fix_host_one/src/main/assets"
                    rename(originFile.name, "${pluName}")
                }
            }
        }
    }
}
